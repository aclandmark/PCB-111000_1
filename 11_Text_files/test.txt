
Text file used to check the operation of the Atmega 328 text programmer and the application with which it is paired.  
Text ahead of the line of “stars” is ignored and can be used to provide introductory text.

*******************************************************
"Programming text directly into flash:

The Atmega 328 has 32,768 bytes of flash which is divided into two partitions.

The first partition extends from locations zero to 0x6FFF (28,672 bytes).

The second partition extends from locations 0x7000 to 0x7FFF (4096 bytes).

Flash is also partitioned into pages, each of 128 bytes.

The first partition is known as the Read While Write partition and has 224 pages.

The second partition is known as the Non Read While Write partition and has 32 pages.

Code running in the NRWW partition can program the RWW partition.

Code running in either partition can read the entire flash.

The NRWW partition can be used to host a program that copies a text file directly to flash in the RWW partition. 
This text can then be read by the main application that resides in the RWW partition.

Several kbytes of text would be totally impractical if embedded in the C file of the main application. 
They can be accommodated in the RWW flash partition while reducing the space available for the main application from say 
28,672 bytes to 26,672 bytes for 2kB of text.

A text programmer is presented in this posting.  
Its hex file is appended to that of the main application and the target device is programmed with both applications at the same time.

The text programmer code starts at location 0x7000.  
The text starts at location 0x6FFFF and expands towards the main application which starts at location zero.  

Following a reset program control always goes to line 0x7000.  
The text writer code runs and starts by checking location 0x6FFF to see if it has been programmed." 


0006     Programming text directly into flash
002B     The Atmega 328 has 32,768 bytes of flash which is divided into two partitions
0079     The first partition extends from locations zero to 0x6FFF (28,672 bytes).
00C3     The second partition extends from locations 0x7000 to 0x7FFF (4096 bytes)
010D     Flash is also partitioned into pages, each of 128 bytes
0145     The first partition is known as the Read While Write partition and has 224 pages
0196     The second partition is known as the Non Read While Write partition and has 32 pages.
01EC     Code running in the NRWW partition can program the RWW partition.
022E     Code running in either partition can read the entire flash.
026A     The NRWW partition can be used to host a program that copies a text file directly to flash
	in the RWW partition. 
02DC     This text can then be read by the main application that resides in the RWW partition
0331     Several kbytes of text would be totally impractical if embedded in the C file of the main
	application. 
0399     They can be accommodated in the RWW flash partition while reducing the space available for
	the main application from say 
0413     28,672 bytes to 26,672 bytes for 2kB of text.
0441     A text programmer is presented in this posting.  
0473     Its hex file is appended to that of the main application and the target device is programmed
	with both applications at the same time
04F8     The text programmer code starts at location 0x7000.  
052E     The text starts at location 0x6FFFF and expands towards the main application which starts
	at location zero.  
059C     Following a reset program control always goes to line 0x7000.  
05DC     The text writer code runs and starts by checking location 0x6FFF to see if it has been programmed.
